(use extras)
(use utf8-srfi-13)
(use coq-au-vin)
(use (prefix cav-db db:))
(use cav-db-sqlite)
(use crypt)

(define (get-input prompt)
  (printf "~A: " prompt)
  (read-line))

(define (get-secret prompt)
  (printf "~A: " prompt)
  (system "stty -echo")
  (let ((input1 (read-line)))
    (newline)
    (system "stty echo")
    (printf "Confirm ~A: " (string-downcase prompt))
    (system "stty -echo")
    (let ((input2 (read-line)))
      (newline)
      (system "stty echo")
      (if (string=? input1 input2)
        input1
        (begin
          (print "Both entries must match.")
          (get-secret prompt))))))

(define (create-user)
  (let ((uname (get-input "Username"))
        (password (get-secret "Password"))
        (email (get-input "Email"))
        (dispname (get-input "Display Name [optional]"))
        (blank? (lambda (s) (string=? (string-trim-both s) ""))))
    (if (or (blank? uname) (blank? password) (blank? email))
      (error "User name, password, and email are required fields.")
      (let ((phash (crypt password)))
        (if (blank? dispname)
          ((db:add-user) uname phash email "admin")
          ((db:add-user) uname phash email "admin" dispname))))))

(define (run)
  (setup-db "data/blog.db")
  (enable-sqlite "data/blog.db" "data/content")
  ((db:connect))
  (register-roles)
  (create-user)
  ((db:disconnect)))

(run)
